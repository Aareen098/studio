{
  "entities": {
    "ContactFormSubmission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ContactFormSubmission",
      "type": "object",
      "description": "Represents a contact form submission from a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the contact form submission."
        },
        "name": {
          "type": "string",
          "description": "The name of the person submitting the form."
        },
        "email": {
          "type": "string",
          "description": "The email address of the person submitting the form.",
          "format": "email"
        },
        "message": {
          "type": "string",
          "description": "The message content from the contact form."
        },
        "submittedAt": {
          "type": "string",
          "description": "The timestamp of when the form was submitted.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "message",
        "submittedAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/contactFormSubmissions/{contactFormSubmissionId}",
        "definition": {
          "entityName": "ContactFormSubmission",
          "schema": {
            "$ref": "#/backend/entities/ContactFormSubmission"
          },
          "description": "Stores contact form submissions. Access is restricted to authorized administrators to view all submissions. The 'contactFormSubmissionId' is a unique identifier for each submission.",
          "params": [
            {
              "name": "contactFormSubmissionId",
              "description": "The unique ID of the contact form submission."
            }
          ]
        }
      }
    ],
    "reasoning": "Based on the user's request to implement the 'hire me' button functionality, this design focuses on securely storing contact form submissions in Firestore. The design emphasizes simplicity and security. The core element is the `contactFormSubmissions` collection, which stores individual submission documents. All documents within this collection will share the same security requirements (Structural Segregation). Since no user authentication is required to submit the form, we do not create user-owned subcollections. There is no need to denormalize any authorization data (Authorization Independence) since access control will be based on Firebase Authentication's admin role for viewing submissions."
  }
}